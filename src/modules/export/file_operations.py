from pathlib import Path
from rich.markup import escape
import os


# Creates directory to save PDF, CSV and HTML content
def createSaveDirectory(config):
    folderName = generateName(config)

    strPath = os.path.join(
        os.path.dirname(__file__), "..", "..", "..", "results", Path(folderName)
    )
    config.saveDirectory = strPath
    path = Path(strPath)
    if not path.exists():
        path.mkdir(parents=True, exist_ok=True)
        if config.verbose:
            config.console.print(
                escape(f"üÜï Created directory to save search data [{folderName}]")
            )

    if config.dump:
        if config.currentUser:
            createDumpDirectory(config.currentUser, config)

        if config.currentEmail:
            createDumpDirectory(config.currentEmail, config)

    if config.pdf:
        if config.currentUser:
            createImagesDirectory(config.currentUser, config)

        if config.currentEmail:
            createImagesDirectory(config.currentEmail, config)

    return True


def createDumpDirectory(identifier, config):
    folderName = f"dump_{identifier}"
    strPath = os.path.join(config.saveDirectory, folderName)
    path = Path(strPath)
    if not path.exists():
        if config.verbose:
            config.console.print(
                escape(f"üÜï Created directory to save dump data [{folderName}]")
            )
        path.mkdir(parents=True, exist_ok=True)


def createImagesDirectory(identifier, config):
    folderName = f"images_{identifier}"
    strPath = os.path.join(config.saveDirectory, folderName)
    path = Path(strPath)
    if not path.exists():
        if config.verbose:
            config.console.print(
                escape(f"üÜï Created directory to save images [{folderName}]")
            )
        path.mkdir(parents=True, exist_ok=True)


def generateName(config, extension=None):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    if config.currentUser:
        target = config.currentUser
    elif config.currentEmail:
        target = config.currentEmail
    elif getattr(config, 'currentPhone', None):
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –¥–ª—è –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏ (—É–¥–∞–ª—è–µ–º +, -, –ø—Ä–æ–±–µ–ª—ã –∏ —Ç.–¥.)
        target = ''.join(filter(str.isdigit, str(config.currentPhone))) or config.currentPhone
    elif getattr(config, 'currentIp', None):
        target = str(config.currentIp).replace('.', '_')
    else:
        target = "osint_target"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –∏–º—è
    folderName = f"{target}_{config.dateRaw}_blackbird"

    if extension:
        folderName = folderName + "." + extension

    # –£–¥–∞–ª—è–µ–º –∏–ª–∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏
    import re
    folderName = re.sub(r'[<>:"/\\|?*\x00-\x1f]', '_', folderName)
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    folderName = folderName[:100]

    return folderName